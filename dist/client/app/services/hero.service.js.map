{"version":3,"sources":["../../client/app/services/hero.service.ts"],"names":[],"mappings":"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","file":"hero.service.js","sourcesContent":["/**\n * Created by Moiz.Kachwala on 02-06-2016.\n */\n\nimport {Injectable} from '@angular/core';\n\nimport { Headers, Http, Response } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport {Hero} from \"../models/hero\";\n\n@Injectable()\nexport class HeroService {\n\n    private heroesUrl = 'api/heroes';  // URL to web api\n\n    constructor(private http: Http) { }\n\n    getHeroes(): Promise<Hero[]> {\n        return this.http.get(this.heroesUrl)\n            .toPromise()\n            .then(response => response.json())\n            .catch(this.handleError);\n    }\n\n    getHero(id: string) {\n        return this.http.get(this.heroesUrl + '/' + id)\n            .toPromise()\n            .then(response => response.json())\n            .catch(this.handleError);\n    }\n\n    save(hero: Hero): Promise<Hero>  {\n        if (hero._id) {\n            return this.put(hero);\n        }\n        return this.post(hero);\n    }\n\n    private post(hero: Hero): Promise<Hero> {\n        let headers = new Headers({\n            'Content-Type': 'application/json'});\n\n        return this.http\n            .post(this.heroesUrl, JSON.stringify(hero), {headers:headers})\n            .toPromise()\n            .then(response => response.json().data)\n            .catch(this.handleError);\n    }\n\n    private put(hero: Hero) {\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n\n        let url = `${this.heroesUrl}/${hero._id}`;\n\n        return this.http\n            .put(url, JSON.stringify(hero), {headers: headers})\n            .toPromise()\n            .then(() => hero)\n            .catch(this.handleError);\n    }\n\n    delete(hero: Hero) {\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n\n        let url = `${this.heroesUrl}/${hero._id}`;\n\n        return this.http\n            .delete(url, headers)\n            .toPromise()\n            .catch(this.handleError);\n    }\n\n    private handleError(error: any) {\n        console.error('An error occurred', error);\n        return Promise.reject(error.message || error);\n    }\n}"]}